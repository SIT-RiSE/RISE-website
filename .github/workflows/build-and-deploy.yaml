name: Build and Deploy Reflex App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository 🛎️
        uses: actions/checkout@v4

      - name: Set up Python from `.python-version` 🐍
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version  # Make sure you have this file in the root directory, or specify the version here

      - name: Install dependencies 📦
        run: |
          python -m pip install --upgrade pip
          pip install reflex  # Install Reflex along with other dependencies
          pip install -r requirements.txt  # If you have a requirements.txt file for your project

      - name: Initialize Reflex (if needed) 📦
        run: reflex init  # This step might not be needed if your project is already set up

      - name: Build the Reflex website 🚧
        run: |
          reflex export --no-zip --frontend-only  # Export static files for frontend only
        env:
          API_URL: "http://www.example.com:8000"  # Update this if you have a backend API URL

      - name: Upload frontend build 📦
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: .web/_static/  # Reflex outputs the static files here
          if-no-files-found: error
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout the repository 🛎️
        uses: actions/checkout@v4

      - name: Download website build 📦
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: frontend/

      - name: Deploy to GitHub Pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: frontend/  # This points to the folder with static files

      # This ensures GitHub Pages does not try to build the site using Jekyll
      - name: Checkout branch 🛎️
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Check if .nojekyll exists 📦
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: ".nojekyll"

      - name: Touch .nojekyll 👉
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          touch .nojekyll

      - name: Commit changes 📦
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .nojekyll
          git commit -m "Added .nojekyll"
          git push
